import java.io.File;
import java.io.FileNotFoundException;
import java.util.*;

import edu.princeton.cs.algs4.In;
import edu.princeton.cs.algs4.StdOut;

public class siteBrowser {
// made by Malin jakobsen - xun007
// team member Renate Nikolajeva 

	public static void main(String[] args) {
		Stack<String> inputStack = new Stack<String>(); // stack with input from file
		Stack<String> placeholderStack = new Stack<String>(); // stack we use to move through input stack
		String look = "";

		inputStack = fileReader();
		int N = inputStack.size();
		Stack<String> historyStack = reverse(inputStack, N); // Stack to keep track of where we are

		/*
		 * For loop to move through the list from the file with the help of 3
		 * different stacks. This is because we can only peek, pop and push in
		 * stacks.
		 */
		for (int i = 0; i < N; i++) {
			look = historyStack.peek();

			if (historyStack.peek().equals("*back*")) {
				placeholderStack.push(inputStack.pop());
				System.out.println(inputStack.peek());
				historyStack.pop();

			} else if (historyStack.peek().equals("*forward*")) {
				if (placeholderStack.isEmpty()) {
					System.out.println("[Warning: last website]");
				} else if (!placeholderStack.isEmpty()) {
					inputStack.push(placeholderStack.pop());
					System.out.println(inputStack.peek());
				}

				historyStack.pop();
			} else {
				if (i != 0) {
					System.out.println(look);
					inputStack.push(look);
				}

				if (!placeholderStack.isEmpty()) {
					placeholderStack.removeAllElements();
				}

				historyStack.pop();
			}

		}

	}

	/*
	 * Reverse method puts all the strings from the original stack to a new
	 * stack. This is so the strings are in right order.
	 */
	private static Stack<String> reverse(Stack<String> inputStack, int N) {
		Stack<String> historyStack = new Stack<String>();
		String str = "";
		for (int i = 0; i < N; i++) {
			str = inputStack.peek();
			inputStack.pop();
			historyStack.push(str);
		}

		return historyStack;
	}

	/*
	 * Reads from the file imported and puts Strings in a stack, returns stack
	 */
	private static Stack<String> fileReader() {
		Stack<String> inputStack = new Stack<String>();
		try {

			File fil = new File("tekst.txt");
			Scanner in = new Scanner(fil);

			while (in.hasNext()) {
				String line = in.next();
				inputStack.push(line);
			}

			in.close();

		} catch (FileNotFoundException cantOpen) {
			StdOut.println("Could not open the file");
		}

		return inputStack;
	}

}
